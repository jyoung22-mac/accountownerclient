{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/OwnerComponents/Owner/Owner.js","containers/Owner/OwnerList/OwnerList.js"],"names":["handleHTTPError","error","props","response","status","type","actionTypes","execute404Handler","execute500Handler","executeOtherErrorHandler","closeErrorModal","instance","axios","create","baseURL","headers","headerType","getData","url","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","Owner","owner","name","format","dateOfBirth","address","onClick","id","history","push","bsStyle","OwnerList","useSelector","state","repository","useDispatch","useEffect","repositoryActions","owners","length","map","mdOffset","md","to","responsive","striped"],"mappings":"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","file":"static/js/10.925f22fe.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\n\nconst execute404Handler = (props) => {\n    return {\n        type: actionTypes.HTTP_404_ERROR,\n        props: props\n    }\n}\n\nconst execute500Handler = (props) => {\n    return {\n        type: actionTypes.HTTP_500_ERROR,\n        props: props\n    }\n}\n\nconst executeOtherErrorHandler = (error) => {\n    return {\n        type: actionTypes.HTTP_OTHER_ERROR,\n        error: error\n    }\n}\n\nexport const handleHTTPError = (error, props) => {\n    if (error.response.status === 404) {\n        return execute404Handler(props);\n    }\n    else if (error.response.status === 500) {\n        return execute500Handler(props);\n    }\n    else {\n        return executeOtherErrorHandler(error);\n    }\n}\n\nexport const closeErrorModal = () => {\n    return {\n        type: actionTypes.CLOSE_ERROR_MODAL\n    }\n}","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://brokerage.herokuapp.com',\n    headers: {\n        headerType: 'example header type'\n    }\n});\n\nexport default instance;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios/axios';\nimport * as errorHandlerActions from './errorHandlerActions';\n\n\n\nconst getDataSuccess = (data) => {\n    return {\n        type: actionTypes.GET_DATA_SUCCESS,\n        data: data\n    }\n}\n\nexport const getData = (url, props) => {\n    return (dispatch) => {\n        axios.get(url)\n        .then(response => {\n            dispatch(getDataSuccess(response.data));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nconst postDataSuccess = (response) => {\n    return {\n        type: actionTypes.POST_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const postData = (url, obj, props) => {\n    return (dispatch) => {\n        axios.post(url, obj)\n        .then(response => {\n            dispatch(postDataSuccess(response));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nconst putDataSuccess = (response) => {\n    return {\n        type: actionTypes.PUT_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const putData = (url, obj, props) => {\n    return (dispatch) => {\n        axios.put(url, obj)\n        .then(response => {\n            dispatch(putDataSuccess(response));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nconst deleteDataSuccess = (response) => {\n    return {\n        type: actionTypes.DELETE_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const deleteData = (url, props) => {\n    return (dispatch) => {\n        axios.delete(url)\n        .then(response => {\n            dispatch(deleteDataSuccess(response));\n        })\n        .catch(error => {\n            \n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nexport const closeSuccessModal = (url, props) =>{\n    return {\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\n        props: props,\n        url: url\n    }\n}\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { Button } from 'react-bootstrap';\n\nconst redirectToOwnerDetails = (id, history) => {\n    history.push('/ownerDetails/' + id);\n}\n\nconst redirectToUpdateOwner = (id, history) => {\n    history.push('/updateOwner/' + id);\n}\n\nconst redirectToDeleteOwner = (id, history) => {\n    history.push('/deleteOwner/' + id);\n}\n\nconst Owner = (props) => {\n    return (\n        <tr>\n            <td>{props.owner.name}</td>\n            <td><Moment format=\"MM/DD/YYYY\">{props.owner.dateOfBirth}</Moment></td>\n            <td>{props.owner.address}</td>\n            <td>\n                <Button onClick={() => redirectToOwnerDetails(props.owner.id, props.history)}>Details</Button>\n            </td>\n            <td>\n                <Button bsStyle=\"success\" onClick={() => redirectToUpdateOwner(props.owner.id, props.history)}>Update</Button>\n            </td>\n            <td>\n                <Button bsStyle=\"danger\" onClick={() => redirectToDeleteOwner(props.owner.id, props.history)}>Delete</Button>\n            </td>\n        </tr>\n    )\n}\n\nexport default Owner;","import React, { useEffect } from 'react';\nimport { Table, Col, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\nimport Owner from '../../../components/OwnerComponents/Owner/Owner';\n\nconst OwnerList = (props) => {\n\n    const data = useSelector(state => state.repository.data);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let url = '/api/owner';\n        dispatch(repositoryActions.getData(url, { ...props }));\n    }, [dispatch, props]);\n\n    let owners = [];\n\nif (data && data.length > 0) {\n    owners = data.map((owner) => {\n        return (\n            <Owner key={owner.id} owner={owner} {...props} />\n        )\n    })\n}\n    return (\n        <>\n            <Row>\n                <Col mdOffset={10} md={2}>\n                    <Link to='/createOwner' >Create Owner</Link>\n                </Col>\n            </Row>\n            <br />\n            <Row>\n                <Col md={12}>\n                    <Table responsive striped>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Date of birth</th>\n                                <th>Address</th>\n                                <th>Details</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {owners}\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default OwnerList;"],"sourceRoot":""}