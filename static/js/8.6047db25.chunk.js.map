{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/Modals/SuccessModal/SuccessModal.js","components/Modals/ErrorModal/ErrorModal.js","containers/Owner/DeleteOwner/DeleteOwner.js"],"names":["handleHTTPError","error","props","response","status","type","actionTypes","execute404Handler","execute500Handler","executeOtherErrorHandler","closeErrorModal","instance","axios","create","baseURL","headers","headerType","getData","url","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","SuccessModal","show","backdrop","Header","modalHeaderText","Body","modalBodyText","Footer","bsStyle","onClick","successClick","okButtonText","ErrorModal","closeModal","DeleteOwner","useSelector","state","repository","showSuccessModal","showErrorModal","errorHandler","errorMessage","useDispatch","owner","useEffect","match","params","id","repositoryActions","md","htmlFor","name","format","dateOfBirth","address","mdOffset","event","preventDefault","history","push"],"mappings":"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","file":"static/js/8.6047db25.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\n\nconst execute404Handler = (props) => {\n    return {\n        type: actionTypes.HTTP_404_ERROR,\n        props: props\n    }\n}\n\nconst execute500Handler = (props) => {\n    return {\n        type: actionTypes.HTTP_500_ERROR,\n        props: props\n    }\n}\n\nconst executeOtherErrorHandler = (error) => {\n    return {\n        type: actionTypes.HTTP_OTHER_ERROR,\n        error: error\n    }\n}\n\nexport const handleHTTPError = (error, props) => {\n    if (error.response.status === 404) {\n        return execute404Handler(props);\n    }\n    else if (error.response.status === 500) {\n        return execute500Handler(props);\n    }\n    else {\n        return executeOtherErrorHandler(error);\n    }\n}\n\nexport const closeErrorModal = () => {\n    return {\n        type: actionTypes.CLOSE_ERROR_MODAL\n    }\n}","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://brokerage.herokuapp.com',\n    headers: {\n        headerType: 'example header type'\n    }\n});\n\nexport default instance;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios/axios';\nimport * as errorHandlerActions from './errorHandlerActions';\n\n\n\nconst getDataSuccess = (data) => {\n    return {\n        type: actionTypes.GET_DATA_SUCCESS,\n        data: data\n    }\n}\n\nexport const getData = (url, props) => {\n    return (dispatch) => {\n        axios.get(url)\n        .then(response => {\n            dispatch(getDataSuccess(response.data));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nconst postDataSuccess = (response) => {\n    return {\n        type: actionTypes.POST_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const postData = (url, obj, props) => {\n    return (dispatch) => {\n        axios.post(url, obj)\n        .then(response => {\n            dispatch(postDataSuccess(response));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nconst putDataSuccess = (response) => {\n    return {\n        type: actionTypes.PUT_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const putData = (url, obj, props) => {\n    return (dispatch) => {\n        axios.put(url, obj)\n        .then(response => {\n            dispatch(putDataSuccess(response));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nconst deleteDataSuccess = (response) => {\n    return {\n        type: actionTypes.DELETE_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const deleteData = (url, props) => {\n    return (dispatch) => {\n        axios.delete(url)\n        .then(response => {\n            dispatch(deleteDataSuccess(response));\n        })\n        .catch(error => {\n            \n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nexport const closeSuccessModal = (url, props) =>{\n    return {\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\n        props: props,\n        url: url\n    }\n}\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport '../ModalStyles.css';\n\nconst SuccessModal = (props) => {\n    return (\n        \n            <Modal show={props.show} backdrop='static'>\n                <Modal.Header>\n                    {props.modalHeaderText}\n                </Modal.Header>\n                <Modal.Body>\n                    <p>{props.modalBodyText}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button bsStyle=\"success\" onClick={props.successClick}>{props.okButtonText}</Button>\n                </Modal.Footer>\n            </Modal>\n      \n    )\n}\n\nexport default SuccessModal;","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport '../ModalStyles.css';\n\nconst ErrorModal = (props) => {\n    return (\n     \n            <Modal show={props.show} backdrop='static'>\n                <Modal.Header>\n                    {props.modalHeaderText}\n                </Modal.Header>\n                <Modal.Body>\n                    <p>{props.modalBodyText}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button bsStyle=\"danger\" onClick={props.closeModal}>{props.okButtonText}</Button>\n                </Modal.Footer>\n            </Modal>\n        \n    )\n}\n\nexport default ErrorModal;","import React, { useEffect } from 'react';\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Well, Button, Col, Row, ControlLabel } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport SuccessModal from '../../../components/Modals/SuccessModal/SuccessModal';\nimport ErrorModal from '../../../components/Modals/ErrorModal/ErrorModal';\nconst DeleteOwner = (props) => {\n\n    const data = useSelector(state => state.repository.data);\n    const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\n    const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\n    const errorMessage = useSelector(state => state.errorHandler.errorMessage);\n    const dispatch = useDispatch();\n\n    let owner = { ...data };\n\n    useEffect(() => {\n        const id = props.match.params.id;\n        const url = '/api/owner/' + id;\n        dispatch(repositoryActions.getData(url, { ...props }));\n    }, []);\n\n    const deleteOwner = (event) => {\n        event.preventDefault();\n    \n        const url = \"/api/owner/\" + data.id;\n    \n        dispatch(repositoryActions.deleteData(url, { ...props }));\n    }\n\n    const redirectToOwnerList = () => {\n        props.history.push('/owner-List');\n    }\n\n    return (\n        <>\n            <Row>\n                <Col md={10}>\n                    <Well>\n                        <Row>\n                            <Col md={3}>\n                                <ControlLabel htmlFor='name'>Owners name:</ControlLabel>\n                            </Col>\n                            <Col md={7}>\n                                <span name='name'>{owner.name}</span>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={3}>\n                                <ControlLabel htmlFor='dateOfBirth'>Date of birth:</ControlLabel>\n                            </Col>\n                            <Col md={7}>\n                                <span name='dateOfBirth'><Moment format=\"MM/DD/YYYY\">{owner.dateOfBirth}</Moment></span>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={3}>\n                                <ControlLabel htmlFor='address'>Address:</ControlLabel>\n                            </Col>\n                            <Col md={7}>\n                                <span name='address'>{owner.address}</span>\n                            </Col>\n                        </Row>\n                    </Well>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col mdOffset={8} md={1}>\n                    <Button type=\"submit\" bsStyle=\"info\" onClick={deleteOwner}>Delete</Button>\n                </Col>\n                <Col md={1}>\n                    <Button bsStyle='danger' onClick={redirectToOwnerList}>Cancel</Button>\n                </Col>\n            </Row>\n\n            <SuccessModal show={showSuccessModal} modalHeaderText={'Success message'}\n                modalBodyText={'Action completed successfully'}\n                okButtonText={'OK'}\n                successClick={() => dispatch(repositoryActions.closeSuccessModal('/owner-List', { ...props }))} />\n            <ErrorModal show={showErrorModal} modalHeaderText={'Error message'}\n                modalBodyText={errorMessage}\n                okButtonText={'OK'}\n                closeModal={() => dispatch(errorHandlerActions.closeErrorModal())} />\n\n        </>\n    )\n}\n\nexport default DeleteOwner;"],"sourceRoot":""}