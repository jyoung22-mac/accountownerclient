{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/OwnerComponents/OwnersAccounts/OwnersAccounts.js","containers/Owner/OwnerDetails/OwnerDetails.js"],"names":["handleHTTPError","error","props","response","status","type","actionTypes","execute404Handler","execute500Handler","executeOtherErrorHandler","closeErrorModal","instance","axios","create","baseURL","headers","headerType","getData","url","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","OwnersAccounts","accounts","map","account","accountType","format","dateCreated","id","md","responsive","striped","OwnerDetails","owner","useSelector","state","repository","useDispatch","useEffect","match","params","repositoryActions","name","dateOfBirth","length","className","renderTypeOfUserConditionally"],"mappings":"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","file":"static/js/9.18e43790.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\n\nconst execute404Handler = (props) => {\n    return {\n        type: actionTypes.HTTP_404_ERROR,\n        props: props\n    }\n}\n\nconst execute500Handler = (props) => {\n    return {\n        type: actionTypes.HTTP_500_ERROR,\n        props: props\n    }\n}\n\nconst executeOtherErrorHandler = (error) => {\n    return {\n        type: actionTypes.HTTP_OTHER_ERROR,\n        error: error\n    }\n}\n\nexport const handleHTTPError = (error, props) => {\n    if (error.response.status === 404) {\n        return execute404Handler(props);\n    }\n    else if (error.response.status === 500) {\n        return execute500Handler(props);\n    }\n    else {\n        return executeOtherErrorHandler(error);\n    }\n}\n\nexport const closeErrorModal = () => {\n    return {\n        type: actionTypes.CLOSE_ERROR_MODAL\n    }\n}","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://brokerage.herokuapp.com',\n    headers: {\n        headerType: 'example header type'\n    }\n});\n\nexport default instance;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios/axios';\nimport * as errorHandlerActions from './errorHandlerActions';\n\n\n\nconst getDataSuccess = (data) => {\n    return {\n        type: actionTypes.GET_DATA_SUCCESS,\n        data: data\n    }\n}\n\nexport const getData = (url, props) => {\n    return (dispatch) => {\n        axios.get(url)\n        .then(response => {\n            dispatch(getDataSuccess(response.data));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nconst postDataSuccess = (response) => {\n    return {\n        type: actionTypes.POST_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const postData = (url, obj, props) => {\n    return (dispatch) => {\n        axios.post(url, obj)\n        .then(response => {\n            dispatch(postDataSuccess(response));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nconst putDataSuccess = (response) => {\n    return {\n        type: actionTypes.PUT_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const putData = (url, obj, props) => {\n    return (dispatch) => {\n        axios.put(url, obj)\n        .then(response => {\n            dispatch(putDataSuccess(response));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nconst deleteDataSuccess = (response) => {\n    return {\n        type: actionTypes.DELETE_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const deleteData = (url, props) => {\n    return (dispatch) => {\n        axios.delete(url)\n        .then(response => {\n            dispatch(deleteDataSuccess(response));\n        })\n        .catch(error => {\n            \n            dispatch(errorHandlerActions.handleHTTPError(error, props));\n        })\n    }\n}\n\nexport const closeSuccessModal = (url, props) =>{\n    return {\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\n        props: props,\n        url: url\n    }\n}\n","import React from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport Moment from 'react-moment';\n\nconst OwnersAccounts = (props) => {\n    let accounts = null;\n    if (props.accounts) {\n        accounts = props.accounts.map(account => {\n          return (\n                <tr key={account.id}>\n                    <td>{account.accountType}</td>\n                    <td><Moment format=\"MM/DD/YYYY\">{account.dateCreated}</Moment></td>\n                </tr>\n            );\n        })\n    }\n    return (\n        <Row>\n            <Col md={12}>\n                <Table responsive striped>\n                    <thead>\n                        <tr>\n                            <th>Account type</th>\n                            <th>Date created</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {accounts}\n                    </tbody>\n                </Table>\n            </Col>\n        </Row>\n    )\n}\n\nexport default OwnersAccounts;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Well, Row, Col } from 'react-bootstrap';\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\nimport Moment from 'react-moment';\nimport OwnersAccounts from '../../../components/OwnerComponents/OwnersAccounts/OwnersAccounts';\n\nconst OwnerDetails = (props) => {\n\n    const owner = useSelector(state => state.repository.data);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let id = props.match.params.id;\n        let url = '/api/owner/' + id + '/account';\n        dispatch(repositoryActions.getData(url, { ...props }));\n    }, [props, dispatch])\n\n    const renderTypeOfUserConditionally = (owner) => {\n        let typeOfUser = null;\n\n        if (owner.accounts && owner.accounts.length <= 2) {\n            typeOfUser = (\n                <Row>\n                    <Col md={3}>\n                        <strong>Type of user:</strong>\n                    </Col>\n                    <Col md={3}>\n                        <span className={'text-success'}>Beginner user.</span>\n                    </Col>\n                </Row>\n            );\n        }\n        else {\n            typeOfUser = (\n                <Row>\n                    <Col md={3}>\n                        <strong>Type of user:</strong>\n                    </Col>\n                    <Col md={3}>\n                        <span className={'text-info'}>Advanced user.</span>\n                    </Col>\n                </Row>\n            );\n        }\n\n        return typeOfUser;\n    }\n\n\n\n    return (\n        <>\n            <Well>\n                <Row>\n                    <Col md={3}>\n                        <strong>Owner name:</strong>\n                    </Col>\n                    <Col md={3}>\n                        {owner.name}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <strong>Date of birth:</strong>\n                    </Col>\n                    <Col md={3}>\n                        <Moment format=\"MM/DD/YYYY\">{owner.dateOfBirth}</Moment>\n                    </Col>\n                </Row>\n                {renderTypeOfUserConditionally(owner)}\n            </Well>\n            <OwnersAccounts accounts={owner.accounts} />\n        </>\n    )\n}\n\nexport default OwnerDetails;"],"sourceRoot":""}